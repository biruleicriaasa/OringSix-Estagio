/*==== RESET =====================================*/
* {
  margin:0px; 
  padding: 0px;
  box-sizing: border-box;
  /* 
  Reseto a margin e o padding de todas as caixas/elementos da pagina deixando em 0px alem de mudar o comportamento da propriedade "box-sizing" declarando seu valor igual "border-box"!
  */
}
a {
  text-decoration: none; /*Propriedade da decoração do textos. Em todos os elementos <a> as decorações dos textos foram retiradas devido a declaração do valor "none". */
}

ul {
  list-style: none;
}

img {
  width: 100%;
  height: auto; /*faz com que a imagem se adaptar ao tamnho da caixa/tag*/
}


/*==== VARIAVEIS =====================================*/
:root{

  --header-height: 4.5rem;/*autura do #header */
  --hue: 159;

  --base-color: hsl(var(--hue) 36% 57%);
  --base-color-second: hsl(var(--hue) 65% 88%);
  --base-color-alt: hsl(var(--hue) 57% 53%);
  --title-color: hsl(var(--hue) 41% 10%);
  --text-color: hsl(0 0% 46%);
  --text-color-light: hsl(0 0% 98%);
  --body-color: hsl(0 0% 98%);
  font-size: 100%; 
  /*
  Os 100% do font-size é 16px. esses 16 px é o que o navegador definiu como padrão para ele!
  */
  
  /*
  então esse valor do fonte size será utilzado como referencia para os tamanhos de heigt, marging, padding entre outras pripriedades no CSS. O calculo para utilizar o valor do :root como referencia sera: medida da pagina (MP) em px dividido por 16px: 
            MP/16px = Xrem 
  As "MP" são baseados no projeto disponivel no figma: 
    https://www.figma.com/file/NtSPxDA383aacOkF0GwfsC/Origin-Six-(Community)?node-id=0%3A1
  */
}


/*==== BASE =====================================*/
body {
  
  font: 400 1rem "DM Sans", sans-serif; 
  color: var(--text-color);
  background: var(--body-color);
  -webkit-font-smoothing: antialiased; /**/
  /* peso, "familia", sans-serif*/
  /*Utilizando as fonts do google*/
}

.title {
  font:  700 1.875rem "Poppins", sans-serif;
  color: var(--title-color);
  -webkit-font-smoothing: antialiased;/**/
  /*utilizando fontes do google*/
}

.button {
  background-color: var(--base-color);
  color: var(--text-color-light);
  height: 3.5rem;
  display: inline-flex;
  align-items: center;
  padding: 0 2rem;
  border-radius: 0.25rem;
  font: 500 1rem var(--body-font);
  transition: background 0.3s; /*muda a cor do background em 0.3s*/
}

.button:hover {
  background: var(--base-color-alt);
}

.divider-1 {
  height: 1px;
  background: linear-gradient(
    270deg,
    hsla(var(--hue), 36%, 57%, 1) 0%,
    hsla(var(--hue), 65%, 88%, 0.34) 100%
  );
}



/*==== LAYOUT =====================================*/
.container {
  margin-left: 1.5rem;/* 24px/ 16px = 1.5rem*/
  margin-right: 1.5rem; 

  /*A classe .container sera utilizada para padronizar as medidas referente as margin dos conteudos que senencontran nos section inseridos na caixa main" como está no projeto do fingma.
  OBS: todas as Caixas/tags filhas herdaram a formatação da tag pai! */
}

.grid {
  display: grid;
  gap: 2rem; /*32px/26*/
  /* A prorpiedade display abilita outras propriedades uma delas é o "gap". todo  elemento ao receber a class "grid" abrira um espaço padrão de 2rem  */
}

.section {
  padding: 5rem 0; /*80px/16px = 5rem*/
}

#header {
  border-bottom: 1px solid #E4E4E4; /*Apropriedade adiciona uma borda na parte inferiro*/
  margin-bottom: 2rem;
  display: flex;

  position: fixed;
  top: 0;
  left: 0;
  z-index: 100;
  background-color: var(--body-color);
  width: 100%;
}

main {
  margin-top: calc((--header-height) + 2rem);/*é devido ao valor "fixed da propriedade no elemento #header que é necessário" para estabeleer a distancia dos elementos  "main e #header" a fim de ficar mais proximo do prototipo que se encontra ni figma.
  os +2rem é a distancia entre a image::before e o #header*/

}

/*==== LOGO =====================================*/

.logo {
  font: 700 1.3125rem "Poppins", sans-serif; /* 21px/16px = 1.3125rem */
  color: var(--title-color);
}

.logo span {
  color: var(--base-color);
}

/*==== NAVEGATION =====================================*/

#header nav {
  height: var(--header-height); /* 72px/16px = 4.5rem*/
  display: flex; /*O valor flex Exibe o conteudo das Caixas/tags ao do lado da outra para para o user! */
  align-items: center; /*Alinhando as elementos/conteudos inseridos no nav*/
  justify-content: space-between; /*Após a propriedade "display" ser habilitada, é possivel acessar a propriedade  justify-content. o valor "space-between" posiciona o conteudo das caixas nos polos!*/
  width: 100%;
}

nav ul li {
 text-align: center;
 position: relative;
}

nav ul li a {
  transition:  color 0.3s;
 }
 
 nav ul li a:hover {
  color: var(--base-color);
 }
 
 nav ul li a::after {
  content: '';
  width: 0%;
  height: 0.13rem;
  background: var(--base-color);

  position: absolute;
  bottom: -1.5rem;
  left: 0;
  transition: width 0.3s;
 }

 nav ul li a:hover::after {
  width: 100%;
 }

 nav .menu {
   opacity: 0;
   visibility: hidden;
 }

 /*Mostar Menu*/
 nav.show .menu {
   opacity: 1;
   visibility: visible;
   background: var(--body-color);
   position: fixed;
   top: 0;
   left: 0;
   height: 100vh;
   width: 100vw;
 }

 nav.show .menu {
  display: grid;
  place-content: center;
}

nav.show ul.grid {
  gap: 4rem;
}

main {
  margin-top: var(--header-height);
}

/* toggle menu */
.toggle {
  color: var(--base-color);
  font-size: 1.5rem;
  cursor: pointer;
}

nav .icon-close {
 opacity: 0;
 visibility: hidden; 
 position: absolute;
 right: 1.5rem;
 /*transi*/
}

nav.show div.icon-close {
  opacity: 1;
<<<<<<< HEAD
  visibility: visible; 
 }
=======
  visibility: visible;
  background: var(--body-color);
  position: fixed; /*usado para deixar fixa e criar uma camada acima de todo conteudo da pagina na tela do usuário*/
  top: 0;
  left: 0;
  height: 100vh;/*serve para pegar 100% da height da tela do despositivo*/
  width: 100vw;/*serve para pegar 100% da width da tela do despositivo*/
}

nav.show .menu {
  display: grid; /*para habilitrar novas propriedades uma delas "place-content" e declarar o valaor "center" */
  place-content: center; /*deixando o conteudo no centro!*/
}

nav.show ul.grid { /*deixo o cursor do mouse em cima do seletor para ver sua espeficidade nesse caso temos 12 de espeficicdade */
  gap: 4rem; /*Baseada*/
}

/* toggle menu */ /*realiza a troca dos botoes com icones d */
.toggle {
  color: var(--base-color);
  font-size: 1.5rem;
  cursor: pointer;/*quando o usuário colocar o cursor em cima dos botões toggles, ele mudara para uma mão apontando o dedo*/
}
nav .icon-close {
  visibility: hidden;
  opacity: 0;
  position: absolute; 
  right: 1.5rem;
}

nav.show div.icon-close {
  visibility: visible;
  opacity: 1;
}

>>>>>>> 4bb374bb7cec7b83eb2ff3ed53a3da764aac36d7
/*==== HOME =====================================*/
#home {
  overflow: hidden;
}

#home .container {
  margin: 0;
}

#home .image {
  position: relative;
}

#home .image::before {
  content: '';
  height: 100%;
  width: 100%;
  background: var(--base-color-second);
  position: absolute;
  top: -16.8%;
  left: 16.7%;
  z-index: 0;
}

#home .image img {
  position: relative;
  right: 2.93rem;
  margin-bottom: 2rem;
}

#home .image img,
#home .image::before {
  border-radius: 0.25rem;
}

#home .text {
  margin-left: 1.5rem;
  margin-right: 1.5rem;
  text-align: center;
}

#home .text h1 {
  margin-bottom: 1rem;
}

#home .text p {
  margin-bottom: 1rem;
}
/*==== ABOUT =====================================*/
